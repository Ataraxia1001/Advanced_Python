Linux tutorial: https://www.youtube.com/watch?v=ZtqBQ68cfJc&list=WL&index=48

useful linux commands

whoami
man
ls -l : show file list with long format (detailed)
ls -a : show all files including hidden files.
ls -al : a and l toghether
cd ../../..
cd ~  : go to home dir
cd /  : go to root dir
mkdir winter summer  : create two dirs
mkdir -p winter/seeds/lettuce   : create nested dir even if parent dir doesn't exist.
rmdir : remove empty dir(=rm -d)
rm -r : remove recursively(all contents)
rm -ri : ask y or n for each file

mv -v journal.txt Journal2.txt (verbose, change file name)
mv cake cookie pie Stuff/  : move 3 files inside Stuff dir
mv STUFF/ ../  : move STUFF dir in parent dir

cp Journal.txt Today_Journal.txt  : copy Journal.txt as name of Today_Journal.txt
cp -r STUFF STUFF_COPY  : copy dir and its all contents
cp Song.txt STUFF/SONG.txt  : copy in STUFF dir

head Song.txt   : show first 10 lines
head Song.txt -n 100  : show first 100 lines
tail Song.txt   : show last 10 lines
tail Song.txt -n 20  :  show last 20 lines
tail -f system.log   : print end of file and wait for a new addition
date  : show date and time

date > file.txt  : save date in file.txt
pwd > file.txt
head > file.txt
ls -l > file.txt

pwd >> file.txt : append pwd to file.txt

cat file.txt : show entire file. cat means concatenate
cat file1 file2 : show both file
cat butcher.txt feedstor.txt groceries.txt > everything.txt  : write three files in everything.txt

less file.txt  : one can scroll pages like man page and search.
echo "Hi"  : just print Hi
echo "USERNAME=COLT" > config.txt  : save string to config.txt
echo "key=123" >> cofig.txt  :  append string to config.txt

wc Song.txt   : show the number of lines, words and bytes
wc -l Song.txt : show the number of lines
wc -m Song.txt : show the number of characters
wc -w Song.txt : show the number of words

Combine two commands
ls -l | wc    : show the number of lines, words and bytes of ls -l result
ls -1 | wc -l : show the number of files here

ls -1 | wc -l > number.txt  : write the number of files in number.txt

sort everything.txt   : show sorted result
sort everything.txt > sortedEverything.txt  
sort nums  : sort like this (2 234 54 6 999)
sort -n nums : sort numerically (small to large number, 2 6 54 234 999)
sort -nr nums : sort reversely `like (999 234 54 6 2)
sort -nu nums : sort only unique values(no duplicate)

cat butcher.txt groceries.txt | sort
sort -un nums | wc -l  : count the number of unique numbers

uniq : remove adjacent duplicate
sort flavors.txt | uniq : remove all duplicates
sort flavors.txt | uniq -d  : print only duplicates
sort flavors.txt | uniq -u  : print only unique lines
sort flavors.txt | uniq -c  : print the number of appearances
sort flavors.txt | uniq -c | sort -n : sort by the number of appearances


echo ~  : print path
echo $PATH : show all directories that the shell will search through to find executables when you enter a command. If the command you enter matches an executable file in any of these directories, the shell will run that executable.

echo *  : show all files
echo *.txt : show all txt files
ls -l *.txt : show all details of txt files
echo *.??  : show any file name and two characters in extension
echo {a,b,c}.txt : show a.txt, b.txt and c.txt
touch app.{js, html, css, py}  : create app.js, app.html, app.css, app.py
echo {1..99}  : show 1 to 99
echo Day{1..365} : show Day1 Day2 ... Day365

diff flavors.txt flavors2.txt  : show difference and what happened to that files
diff -y flavors.txt flavors2.txt  : show both files side by side
diff -u flavors.txt flavors2.txt  :

find . -name '*.py'   : find all .py files in current location
fine STUFF -name '*.txt' : find all txt files in STUFF dir
find . -type f  : search only files
find . -type d  : search only dirs
find . -type d -name '*E*'  :  combine above commands
find . -name '*E*' -or -name 'F*' :   use two conditions with or
find -type f -size +100k   : search files bigger than 100 kilobytes
find -type f -size +100k -exec ls -l {} \;    :   execute ls -l only for the files bigger than 100 kilobytes
find -type f -size +100k -exec cat {} \;      :   execute cat only for ... 

Note:
find searches files
grep searches inside files


grep green Song.txt  : show matching 'green's in Song.txt
grep -n green Song.txt : show matching 'green's with line number
grep -r "chicken"    :  look inside all files to search "chicken"
grep -ri "chicken"   :  case-insensitive (both upper and lower case)


du  : show all dirs with size
du -m  : show sizes in megabytes
du -g  : show sizes in gigabytes
du -mh  : h is human-readable. (mix with g and m...)
du -h | sort -h  :  sort files by sizes in human-readable manner
du -h | sort -h | tail:  show tail of above result 


df : for disk usage info
df -h  : human-readable
df -h STUFF   : show only in STUFF dir


history   : show all commands that I used
!206 : run 206th command
history | grep 'ls'    : show all commands including ls


ps   :  show current processes status by user
ps ax  : all current processes


top : show processes with cpu usages

kill <PID>  : kill the process
killall node  : kill all programs node



jobs  : show stopped process
bg   : resume it in background
fg   : resume it in fo


gzip file  : compress and replace it with compressed file
gzip -k file : compress and keep original file
gzip -d file.gz  : decompress(unzip)
gunzip file.gz  : unzip(same as above one)
gzip -kv file  : compress and show how much it reduces by compression


tar : group multiple files in a single file. 

tar -cf archive.tar a.txt b.txt (not compress)
tar -xf archive.tar (extract files from an archive)
tar -tf archive  : see files inside archive
gzip -k archive.tar  : compress archive file (file extension is .tar.gz)
tar -czf archive.tar.gz file1 file2  (archive and compress!)

nano editor
shortcuts
ctr + k : remove line
ctr + u : paste

alias : make alternative name for a long command. (not permanent if window is closed)
alias myls='ls -la' : myls is a new name.

Define alias in .bashrc to make alias permanent.



xargs: the output of a command is used as the input of another command

ls | sort  : the output of ls is the input of sort

cat deadPlayers.txt | xargs rm   : the content of deadPlayers.txt is argument of rm
find . -size +1M | xargs ls -lh : all files of which size is bigger than 1M are shown with ls -lh



ln : create link. a file that points to another file.
not copy, but point(link)

-- hard link
ln original.txt hardlink.txt : create hardlink.txt which points original.txt.

if I modify hardlink.txt, original.txt will be modified.(if it was copy, it would not change)
if I remove original.txt, I can still open same file with hardlink.txt.

-- soft link
ln -s original.txt symlink.txt : create soft link

if I change original.txt, symlink.txt will be changed.
if I change symlink.txt, the original.txt will be changed.
but if I remove the original.txt, the symlink.txt doesn't work anymore!


who : displays the users logged in to the system

su : switch user. 
su <username>
su - <username> : full setup of new user in shell environment

sudo : run a command as root. (superuser do) The current user must be in the sudoers file.

passwd : change password
sudo passwd elvis : change elvis's password

chown : the owner change the owner to another user. (change ownership) The owner of the file can do everything with it.
chown <owner> <file>

chown -R <owner> <file> : recursive. change owner of all files inside.
chown <owner>:<group> <file> : change group together.

Permission

drwxr-xr-x
first char : file type. directory(d), normal(-), link(l)...
next three, three, three : Owner, Group, World. (read, write, execute)


chmod : change permissions

u, g, o, a: user(owner), group, others(world), all

chmod g+w file.txt  : add write permission to group
chmod a-w file.txt : remove write permission to all

chmod a+r file.txt : add read permission to all
chmod o-rwx file.txt : remove read, write, execute permissions to others
chmod a=r file.txt : set only read permission to all
chmod ug+w : add write permission to user and group







